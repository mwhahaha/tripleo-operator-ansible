[tox]
minversion = 2.0
envlist = docs, linters
skipdist = True

[testenv]
usedevelop = True
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://opendev.org/openstack/requirements/raw/branch/master/upper-constraints.txt} {opts} {packages}
passenv = *
setenv =
  VIRTUAL_ENV={envdir}
  ANSIBLE_ACTION_PLUGINS={toxinidir}/tripleo/operator/plugins/action
  ANSIBLE_CALLBACK_PLUGINS={toxinidir}/tripleo/operator/plugins/callback
  ANSIBLE_FILTER_PLUGINS={toxinidir}/tripleo/operator/plugins/filter
  ANSIBLE_LIBRARY={toxinidir}/tripleo/operator/plugins/modules
  ANSIBLE_MODULE_UTILS={toxinidir}/tripleo/operator/plugins/module_utils
  ANSIBLE_ROLES_PATH={toxinidir}/tripleo/operator/roles
  ANSIBLE_INVENTORY={toxinidir}/tripleo/operator/tests/hosts.ini
  ANSIBLE_NOCOWS=1
  ANSIBLE_RETRY_FILES_ENABLED=0
  ANSIBLE_STDOUT_CALLBACK=debug
  ANSIBLE_LOG_PATH={envlogdir}/ansible-execution.log
  VIRTUAL_ENV={envdir}
  # pip: Avoid 2020-01-01 warnings: https://github.com/pypa/pip/issues/6207
  # paramiko CryptographyDeprecationWarning: https://github.com/ansible/ansible/issues/52598
  PYTHONWARNINGS=ignore:DEPRECATION::pip._internal.cli.base_command,ignore::UserWarning
  PIP_DISABLE_PIP_VERSION_CHECK=1
sitepackages = True
deps =
   -r {toxinidir}/test-requirements.txt
   -r {toxinidir}/ansible-requirements.txt
commands = stestr run {posargs}
whitelist_externals =
    bash
    tox

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
deps = bindep
commands = bindep test

[testenv:pep8]
envdir = {toxworkdir}/linters
commands =
    python -m pre_commit run flake8 -a

[testenv:ansible-lint]
envdir = {toxworkdir}/linters
deps =
  {[testenv:linters]deps}
commands =
  python -m pre_commit run ansible-lint -a
#  bash -c "ANSIBLE_ROLES_PATH='{toxinidir}/tripleo/operators/roles' \
#           ansible-galaxy install -fr {toxinidir}/tripleo/operators/ansible-role-requirements.yml"

[testenv:yamllint]
envdir = {toxworkdir}/linters
deps = {[testenv:linters]deps}
commands =
    python -m pre_commit run yamllint -a

[testenv:bashate]
envdir = {toxworkdir}/linters
deps = {[testenv:linters]deps}
commands =
    python -m pre_commit run bashate -a

[testenv:whitespace]
envdir = {toxworkdir}/linters
deps = {[testenv:linters]deps}
commands =
    python -m pre_commit run trailing-whitespace -a

[testenv:shebangs]
envdir = {toxworkdir}/linters
deps = {[testenv:linters]deps}
commands =
    python -m pre_commit run check-executables-have-shebangs -a

[testenv:linters]
deps =
    -r {toxinidir}/requirements.txt
    -r {toxinidir}/test-requirements.txt
commands =
    {[testenv:pep8]commands}
    {[testenv:ansible-lint]commands}
    {[testenv:bashate]commands}
    {[testenv:yamllint]commands}
    {[testenv:whitespace]commands}
    {[testenv:shebangs]commands}

[testenv:releasenotes]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands =
    sphinx-build -a -E -W -d releasenotes/build/doctrees --keep-going -b html releasenotes/source releasenotes/build/html

[testenv:docs]
basepython = python3
deps =
  -r {toxinidir}/doc/requirements.txt
commands=
    doc8 doc
    sphinx-build -a -E -W -d doc/build/doctrees --keep-going -b html doc/source doc/build/html -T

[doc8]
# Settings for doc8:
extensions = .rst
ignore = D001

[testenv:venv]
commands = {posargs}

[testenv:build]
basepython = python3
deps = -r{toxinidir}/ansible-requirements.txt
commands =
    ansible-galaxy collection build --force --output-path {toxinidir}/build/ tripleo/operator/

